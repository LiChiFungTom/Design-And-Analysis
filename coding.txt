1. what is the GCD(original) python code and Pseudo-code?
    

    Python code:
    def gcd(a,b):
        while a!=b:
            if a > b:
                a = a - b
            else:
                b= b - a
        return a

    Pseudo-code:
        gcd(a,b):
            while a =/ b:
                if a > b:
                    a = a - b
                else:
                    b = b - a
            return a

2. what is the improved of GCD python code?
    def gcd2(a,b):
        if a < b :
            a,b = b,a
        while a%b > 0 :
            a,b = b,a %b
        return b

3. Huffman code 
while length of node list h >= 2:
    get index ind1 of node with the lowest freq
    left = h[ind1]
    delete this node

    get index ind2 of node with the 2nd lowest freq
    right = h[ind2]
    delete this node
    
    create the last node by merging left and right,
	summing up their freq and append last to h 

4. Huffman code with using a min-Heap
while length of node list h >= 2:
    pop an element left from min-Heap of h
    pop an element right from min-Heap of h

    create the last node by merging left and right,
    push last to the min-Heap of h 

